{
  "rules": {
    "$volun_id": {
      ".read": "auth.uid != null && (auth.uid === $volun_id || root.child('roomAssigned').child(auth.uid).child('status').val() === $volun_id)",
      ".write": "auth.uid != null && (auth.uid === $volun_id || root.child('roomAssigned').child(auth.uid).child('status').val() === $volun_id)",
      "$msg_id": {
        ".validate": "newData.hasChildren(['uid', 'time', 'msg']) || newData.hasChildren(['uid', 'time', 'special'])"
      }
    },
    "clientQueue": {
      "$user_id": {
        ".read": "auth.uid != null && auth.provider === 'anonymous' && auth.uid === $user_id",
        ".write": "(auth.uid != null && auth.provider === 'anonymous' && auth.uid === $user_id && (newData.child('status').val() === 'inQueue' || !newData.exists())) || (auth.uid != null && auth.provider === 'password' && data.child('status').val() === 'inQueue' && !newData.exists())",
        ".validate": "newData.hasChildren(['status', 'time']) || !newData.exists()"
      },
      ".read": "(auth.uid != null && auth.provider === 'password')"
    },
    "roomAssigned": {
      "$user_id": {
        ".read": "(auth.uid != null && auth.provider === 'anonymous' && auth.uid === $user_id) || (auth.uid != null && auth.provider === 'password' && data.child('status').val() === auth.uid)",
        ".write": "(auth.uid != null && auth.provider === 'anonymous' && auth.uid === $user_id && !newData.exists()) || (auth.uid != null && auth.provider === 'password' && ((!data.exists() && newData.child('status').val() === auth.uid) || (data.child('status').val() === auth.uid && !newData.exists()) || (data.child('status').val() === auth.uid && newData.child('status').val() === 'volunLeft')))",
        ".validate": "newData.hasChildren(['status', 'time']) || !newData.exists()"
      }
    },
    "currClientId": {
      "$volun_id": {
        ".read": "(auth.uid != null && auth.provider === 'password' && auth.uid === $volun_id) || (auth.uid != null && auth.provider === 'anonymous' && data.val() === auth.uid)",
        ".write": "(auth.uid != null && auth.provider === 'password' && auth.uid === $volun_id) || (auth.uid != null && auth.provider === 'anonymous' && data.val() === auth.uid && newData.val() === 'clientLeft')",
        ".validate": "newData.isString() || !newData.exists()"
      }
    },
    ".read": false,
    ".write": false
  }
}
